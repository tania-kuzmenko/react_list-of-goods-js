{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TYPE_ALPHABET","SORT_TYPE_LENGTH","App","useState","isReverse","setIsReverse","sortType","setSortType","sortedGoods","goods","preparedGoods","sort","good1","good2","indexOf","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,sBACrBC,EAAmB,iBAqClB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAtCR,SAA0BC,EAA1B,GAA2D,IAAxBH,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,UACvCM,EAAa,YAAOD,GA+BxB,OA7BkB,IAAdL,IACFM,EAAgBA,EACbC,MAAK,SAACC,EAAOC,GAAR,OAAkBH,EAAcI,QAAQD,GAC1CH,EAAcI,QAAQF,OAG9BF,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EACH,OAAkB,IAAdI,EACKQ,EAAMG,cAAcF,GAGtBA,EAAME,cAAcH,GAG7B,KAAKX,EACH,OAAkB,IAAdG,EACKQ,EAAMI,OAASH,EAAMG,OAGvBH,EAAMG,OAASJ,EAAMI,OAG9B,QACE,OAAO,MAINN,EAMaO,CAClBlB,EAAiB,CAAEO,WAAUF,cAG/B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,0BAA2Bd,IAAaN,IAE1CqB,QAAS,kBAAMd,EAAYP,IAL7B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,6BAA8Bd,IAAaL,IAE7CoB,QAAS,kBAAMd,EAAYN,IAL7B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,6BAA4C,IAAdhB,IAEhCiB,QAAS,WAELhB,EADgB,IAAdD,EACW,EAEA,IATnB,qBAeCE,GAAYF,EACX,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,EAAY,IACZF,EAAa,IALjB,mBAUE,QAIN,6BACGG,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCrHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b1110ff5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE_ALPHABET = 'Sort alphabetically';\nconst SORT_TYPE_LENGTH = 'Sort by length';\n\nfunction getPreparedGoods(goods, { sortType, isReverse }) {\n  let preparedGoods = [...goods];\n\n  if (isReverse === 1) {\n    preparedGoods = preparedGoods\n      .sort((good1, good2) => preparedGoods.indexOf(good2)\n        - preparedGoods.indexOf(good1));\n  }\n\n  preparedGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SORT_TYPE_ALPHABET: {\n        if (isReverse === 0) {\n          return good1.localeCompare(good2);\n        }\n\n        return good2.localeCompare(good1);\n      }\n\n      case SORT_TYPE_LENGTH: {\n        if (isReverse === 0) {\n          return good1.length - good2.length;\n        }\n\n        return good2.length - good1.length;\n      }\n\n      default:\n        return 0;\n    }\n  });\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isReverse, setIsReverse] = useState(0);\n  const [sortType, setSortType] = useState('');\n  const sortedGoods = getPreparedGoods(\n    goodsFromServer, { sortType, isReverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'button is-info is-light': sortType !== SORT_TYPE_ALPHABET,\n          })}\n          onClick={() => setSortType(SORT_TYPE_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'button is-success is-light': sortType !== SORT_TYPE_LENGTH,\n          })}\n          onClick={() => setSortType(SORT_TYPE_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'button is-warning is-light': isReverse !== 1,\n          })}\n          onClick={() => {\n            if (isReverse === 0) {\n              setIsReverse(1);\n            } else {\n              setIsReverse(0);\n            }\n          }}\n        >\n          Reverse\n        </button>\n        {sortType || isReverse ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType('');\n              setIsReverse(0);\n            }}\n          >\n            Reset\n          </button>\n        ) : null}\n\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}